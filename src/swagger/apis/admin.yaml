paths:
  /api/users:
    get:
      tags:
        - Admin
      summary: Get all users (admin only)
      description: Returns a list of all users. Only accessible by admin users.
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
        "401":
          $ref: '#/components/responses/Unauthorized'

    post:
      tags:
        - Admin
      summary: Create a new user (admin only)
      description: Creates a new user. Only accessible by admin users.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        "400":
          $ref: '#/components/responses/ValidationError'
        "401":
          $ref: '#/components/responses/Unauthorized'

  /api/users/{id}:
    get:
      tags:
        - Admin
      summary: Get user by ID (admin only)
      description: Returns a user by ID. Only accessible by admin users.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        "400":
          $ref: '#/components/responses/ValidationError'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'

    patch:
      tags:
        - Admin
      summary: Update user by ID (admin only)
      description: Updates a user by ID. Only accessible by admin users. Only main admin can update other admins.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        "400":
          $ref: '#/components/responses/ValidationError'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Admin
      summary: Delete user by ID (admin only)
      description: Deletes a user by ID. Only accessible by admin users. Only main admin can delete other admins.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        "204":
          description: User deleted successfully
        "400":
          $ref: '#/components/responses/ValidationError'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'

  /api/users/get-users-count:
    get:
      tags:
        - Admin
      summary: Get users count by period (admin only)
      description: Returns the number of users grouped by day/week/month/year/all. Only accessible by admin users.
      parameters:
        - in: query
          name: period
          required: true
          schema:
            type: string
            enum: [week, month, year, all]
          description: Period to group user counts by
      responses:
        "200":
          description: Users count by period
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      usersCountByDay:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                              example: "2024-05-01"
                            count:
                              type: integer
                              example: 5
        "400":
          $ref: '#/components/responses/ValidationError'
        "401":
          $ref: '#/components/responses/Unauthorized'

