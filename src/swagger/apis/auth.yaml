paths:
  /api/users/signup:
    post:
      tags:
        - Auth
      summary: Register a new user
      description: Creates a new user and returns a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupDto"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: "#/components/schemas/User"
        "400":
          description: Validation error or user already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                        message:
                          type: string
                          example: "ایمیل قبلا استفاده شده است"

  /api/users/login:
    post:
      tags:
        - Auth
      summary: Login user
      description: Authenticates a user and returns a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDto"
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: "#/components/schemas/User"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                        message:
                          type: string
                          example: "ایمیل الزامی است"
        "401":
          description: Invalid credentials or user not active
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                        message:
                          type: string
                          example: "ایمیل یا رمز عبور معتبر نیست"

  /api/users/logout:
    post:
      tags:
        - Auth
      summary: Logout user
      description: Logs out the user and removes the authentication cookie
      responses:
        "204":
          description: User logged out successfully, cookie removed

  /api/users/forgot-password:
    post:
      tags:
        - Auth
      summary: Forgot password
      description: Sends a password reset email to the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordDto"
      responses:
        "200":
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: "ایمیل بازیابی رمز عبور ارسال شد"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                        message:
                          type: string
                          example: "ایمیل الزامی است"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                          example: "کاربر یافت نشد"
        "401":
          description: User is not active
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                          example: "کاربر فعال نیست"

  /api/users/reset-password:
    patch:
      tags:
        - Auth
      summary: Reset password
      description: Resets the user's password using a reset token
      parameters:
        - in: query
          name: resetToken
          required: true
          schema:
            type: string
          description: The password reset token sent to the user's email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordDto"
      responses:
        "200":
          description: Password reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "رمز عبور با موفقیت تغییر کرد"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: password
                        message:
                          type: string
                          example: "تایید رمز عبور مطابقت ندارد"
        "401":
          description: Invalid or expired reset token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "fail"
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: password
                        message:
                          type: string
                          example: "توکن بازیابی معتبر نیست یا منقضی شده است"

tags:
  - name: Auth
    description: Authentication related endpoints

components:
  schemas:
    SignupDto:
      type: object
      required:
        - name
        - email
        - password
        - passwordConfirmation
      properties:
        name:
          type: string
          example: Hossein Rezaei
        email:
          type: string
          example: hossein@example.com
        password:
          type: string
          format: password
          example: StrongPass123!
        passwordConfirmation:
          type: string
          format: password
          example: StrongPass123!
    LoginDto:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: hossein@example.com
        password:
          type: string
          format: password
          example: StrongPass123!
    ForgotPasswordDto:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: hossein@example.com
    ResetPasswordDto:
      type: object
      required:
        - password
        - passwordConfirmation
      properties:
        password:
          type: string
          format: password
          example: NewStrongPass123!
        passwordConfirmation:
          type: string
          format: password
          example: NewStrongPass123!
