{
	"compilerOptions": {
		"target": "ES2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
		"experimentalDecorators": true /* Enable experimental support for TC39 stage 2 draft decorators. */,
		"module": "CommonJS" /* Specify what module code is generated. */,
		"rootDir": "./" /* Specify the root folder within your source files. */,
		"moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
		"allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,
		"checkJs": true /* Enable error reporting in type-checked JavaScript files. */,
		"sourceMap": false /* Create source map files for emitted JavaScript files. */,
		"outDir": "./dist" /* Specify an output folder for all emitted files. */,
		"removeComments": true /* Disable emitting comments. */,
		"noEmitOnError": true /* Disable emitting files if any type checking errors are reported. */,
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied `any` type.. */,
		"strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
		"strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
		"noUnusedLocals": true /* Enable error reporting when a local variables aren't read. */,
		"noUnusedParameters": false /* Raise an error when a function parameter isn't read */,
		"noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
		"noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
		"allowUnreachableCode": false /* Disable error reporting for unreachable code. */,
		"skipLibCheck": true /* Skip type checking all .d.ts files. */,
		"types": ["jest", "supertest"],
		"baseUrl": "./",
		"paths": {
			"@/*": ["src/*"]
		}
	}
}
